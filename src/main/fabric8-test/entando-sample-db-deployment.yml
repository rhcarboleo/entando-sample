apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  annotations:
    template.alpha.openshift.io/wait-for-ready: 'true'
  creationTimestamp: '2018-04-11T04:59:56Z'
  generation: 4
  labels:
    app: postgresql-persistent
    template: postgresql-persistent-template
  name: entando-sample-db
  namespace: myproject
  resourceVersion: '78679'
  selfLink: >-
    /apis/apps.openshift.io/v1/namespaces/myproject/deploymentconfigs/entando-sample-db
  uid: 2de776e3-3d45-11e8-82c4-5208d66b3581
spec:
  replicas: 1
  selector:
    name: entando-sample-db
  strategy:
    activeDeadlineSeconds: 21600
    recreateParams:
      timeoutSeconds: 600
    resources: {}
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        name: entando-sample-db
    spec:
      containers:
        - env:
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: entando-sample-db
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: entando-sample-db
            - name: POSTGRESQL_DATABASE
              valueFrom:
                secretKeyRef:
                  key: database-name
                  name: entando-sample-db
          image: >-
            centos/postgresql-95-centos7@sha256:2868b2293d03b09f1a3e34caedee2472f760f2d9996c917626a15ab887255f53
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          name: postgresql
          ports:
            - containerPort: 5432
              protocol: TCP
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - '-i'
                - '-c'
                - >-
                  psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d
                  $POSTGRESQL_DATABASE -c 'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /var/lib/pgsql/data
              name: entando-sample-db-data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: entando-sample-db-data
          persistentVolumeClaim:
            claimName: entando-sample-db
  test: false
  triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
          - postgresql
        from:
          kind: ImageStreamTag
          name: 'postgresql:9.5'
          namespace: myproject
      type: ImageChange
    - type: ConfigChange
status:
  availableReplicas: 0
  conditions:
    - lastTransitionTime: '2018-04-11T04:59:56Z'
      lastUpdateTime: '2018-04-11T04:59:56Z'
      message: Deployment config does not have minimum availability.
      status: 'False'
      type: Available
  latestVersion: 0
  observedGeneration: 4
  replicas: 0
  unavailableReplicas: 0
  updatedReplicas: 0
